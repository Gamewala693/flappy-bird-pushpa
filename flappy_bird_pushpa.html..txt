<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Flappy Bird - Pushpa Theme</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-image: url('puspa imag.jpg'); /* Replace with the uploaded Pushpa-themed background */
      background-size: cover;
      font-family: Arial, sans-serif;
    }
    canvas {
      border: 2px solid #000;
      background-color: rgba(255, 255, 255, 0.8);
    }
    .base {
      position: absolute;
      bottom: 0;
      width: 100%;
      height: 100px;
      background-image: url('https://example.com/pushpa-theme-base.jpg'); /* Replace with a Pushpa-themed base image URL */
      background-repeat: repeat-x;
      animation: moveBase 3s linear infinite;
    }
    @keyframes moveBase {
      from {
        background-position-x: 0;
      }
      to {
        background-position-x: -400px;
      }
    }
  </style>
</head>
<body>
  <div class="base"></div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    const bird = {
      x: 50,
      y: 150,
      width: 20,
      height: 20,
      gravity: 0.6,
      lift: -15,
      velocity: 0,
    };

    const pipes = [];
    const pipeWidth = 40;
    const gap = 120;
    let frameCount = 0;
    let score = 0;
    let gameOver = false;

    const sounds = {
      flap: new Audio('https://www.soundjay.com/button/beep-07.wav'),
      score: new Audio('https://www.soundjay.com/button/beep-08b.wav'),
      hit: new Audio('https://www.soundjay.com/button/beep-10.wav'),
    };

    function drawBird() {
      const birdImage = new Image();
      birdImage.src = 'https://example.com/pushpa-theme-bird.png'; // Replace with a Pushpa-themed bird image URL
      ctx.drawImage(birdImage, bird.x, bird.y, bird.width, bird.height);
    }

    function drawPipes() {
      const pipeImage = new Image();
      pipeImage.src = 'https://example.com/pushpa-theme-pipe.png'; // Replace with a Pushpa-themed pipe image URL
      pipes.forEach(pipe => {
        ctx.drawImage(pipeImage, pipe.x, 0, pipeWidth, pipe.top);
        ctx.drawImage(pipeImage, pipe.x, pipe.top + gap, pipeWidth, canvas.height - pipe.top - gap);
      });
    }

    function updatePipes() {
      if (frameCount % 100 === 0) {
        const topHeight = Math.random() * (canvas.height - gap - 50) + 20;
        pipes.push({ x: canvas.width, top: topHeight });
      }
      pipes.forEach(pipe => pipe.x -= 2);
      if (pipes.length && pipes[0].x + pipeWidth < 0) {
        pipes.shift();
        score++;
        sounds.score.play();
      }
    }

    function checkCollision() {
      if (bird.y + bird.height > canvas.height || bird.y < 0) {
        gameOver = true;
        sounds.hit.play();
      }
      pipes.forEach(pipe => {
        if (
          bird.x < pipe.x + pipeWidth &&
          bird.x + bird.width > pipe.x &&
          (bird.y < pipe.top || bird.y + bird.height > pipe.top + gap)
        ) {
          gameOver = true;
          sounds.hit.play();
        }
      });
    }

    function drawScore() {
      ctx.fillStyle = 'black';
      ctx.font = '20px Arial';
      ctx.fillText(`Score: ${score}`, 10, 25);
    }

    function gameLoop() {
      if (gameOver) {
        ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = 'white';
        ctx.font = '30px Arial';
        ctx.fillText('Game Over', canvas.width / 4, canvas.height / 2);
        ctx.font = '20px Arial';
        ctx.fillText(`Score: ${score}`, canvas.width / 3, canvas.height / 2 + 30);
        return;
      }

      ctx.clearRect(0, 0, canvas.width, canvas.height);

      bird.velocity += bird.gravity;
      bird.y += bird.velocity;

      drawBird();
      updatePipes();
      drawPipes();
      drawScore();
      checkCollision();

      frameCount++;
      requestAnimationFrame(gameLoop);
    }

    document.addEventListener('keydown', (e) => {
      if (e.code === 'Space') {
        bird.velocity = bird.lift;
        sounds.flap.play();
      }
    });

    gameLoop();
  </script>
</body>
</html>
